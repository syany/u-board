apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava, javadoc]*.options*.encoding = defaultEncoding

sourceCompatibility = 1.8
sourceCompatibility = 1.8
group = 'org.u-board'
archivesBaseName = 'u-board'
version = '0.4.3'

dependencies {
    compile group: 'org.uranoplums', name: 'uranoplums', version: '1.+'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

repositories {
    maven {
        url "https://github.com/syany/uranoplums/tree/master/build/maven"
    }
    mavenCentral()
    mavenLocal()
}

test {
    systemProperties 'property': 'value'
}

// maven ローカルリポジトリのパス
ext {
    mavenRepository = "${buildDir}/maven"
    mainClassName = 'org.urakeyboard.application.UraKeyboardApplication'
}

jar {
    manifest {
        attributes 'Main-Class' : mainClassName,
                   'Class-Path':'. ' + configurations.runtime.files.collect { it.name }.join(' '),
                   'Implementation-Title': 'U-BOARD(Midi Keyboard EMULATOR)',
                   'Implementation-Version': version
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:${mavenRepository}")
        }
    }
}

[install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
    pom.project {
        inceptionYear '2017'
        packaging 'jar'
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
    }
}

task uploadArchivesAll(dependsOn: 'uploadArchives') << {
}

task jarAll(dependsOn: 'jar') << {
}

gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(uploadArchivesAll)) {
        jar {
            println 'We uploadArchivesAll now'
            from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
        uploadArchives.doFirst {
            repositories {
                mavenDeployer {
                    repository(url: "file:${buildDir}/mavenIncludeAll")
                }
            }
        }
    }
    if (taskGraph.hasTask(jarAll)) {
        jar {
            println 'We jarAll now'
            from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}